copilot init
→ VPC
→ pub-subnet x 2 & pri-subnet x 2
→ IAM role
→ security group(80,433 port & for container-interactive communication )
→ internet Gateway to connect to  public internet
→ Route table
→ ECR repo
→ ECS Cluster (on fargate)
→ Application Load Balancer 
→ target group to connect the load  balancer 
→ ECS task definition 
→ IAM role for ECS resources

copilot pipeline init
automatically detected remote origin repository
create configuration for codebuild & for codepipeline

git add . & git commit $ git push 

copilot pipeline update
→ codePipeline
→ codeBuild

(アプリケーションの作成)
copilot app init (アプリ名)
(環境の作成)
copilot env init (環境名)
(サービスの作成)
 - 新しく作成する場合
copilot init
 - dockerfileがbuildされて、ECRが作成され、manifest.ymlが作成される
 - すでにmanifest.ymlがあるとskipされてECRの作成のみになる。manifest.ymlを適用させるために
copilot svc deploy --name (サービス名) --env (環境名)


(Environment作成時に既存のvpc,サブネットをインポート)
copilot env init --name (環境名) --region (リージョン名) \
--import-vpc-id (vpc-xxxxxx) \
--import-public-subnets subnet-xxxxxx,subnet-xxxxxx \
--import-private-subnets subnet-xxxxx,subnet-xxxxxx

(新規でvpc,subnetの作成)
copilot env init --name (環境名:prod) --region (リージョン:ap-northeast-1) \
--override-vpc-cidr 10.1.0.0/16 \
--override-public-cidrs 10.1.0.0/24,10.1.1.0/24 \
--override-private-cidrs 10.1.2.0/24,10.1.3.0/24


(create manifest.yml:defined service)
copilot svc init
(※ecsごとに新しいserviceを作成する)

(update the manifest to change the default)
copilot svc deploy --name (サービス名:copilot-cake) --env (環境名:test)
(既存のtaskを自動的に削除してくれる!!)

(すべてのサービスで共有されるパイプラインを作成)
copilot pipeline init --url (リポジトリurl) --environments (環境名)
(initで作成されたymlを適用するために)
copilot pipeline update

(サービスの詳細を表示)
copilot svc show --app (アプリ名) --name (サービス名)
(パイプラインの詳細を表示)
copilot pipeline show --app (アプリ名) --name (パイプライン名) --resources
(環境の詳細情報を表示)
copilot env show --app (アプリ名) --name (環境名) --resources
(パイプラインの情報表示)
copilot pipeline show --app (アプリ名)  --resources


(サービスの削除)
copilot svc delete --env (環境名) --name (サービス名)
(ワークスペースに紐付いているpipelineの削除)
copilot pipeline delete --yes 
(環境の削除)
copilot env delete --name (環境名) --app (アプリ名)
(アプリの削除)
copilot app delete --yes
(パイプラインの削除)
copilot pipeline delete